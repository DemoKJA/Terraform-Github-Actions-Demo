name: Dev Plan

on:
  pull_request:
    branches:
      - dev
  workflow_dispatch:

env:
  ARM_ACCESS_KEY: ${{ secrets.AzStorageKey }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.sub }}
  ARM_TENANT_ID: ${{ secrets.tenantId }}
  ARM_CLIENT_ID: ${{ secrets.clientId }}
  ARM_CLIENT_SECRET: ${{ secrets.clientSecret }}

jobs:
  terraform_workflow:
    name: terraform_workflow
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.2
          terraform_wrapper: false
      - name: init
        run: |
          terraform init \
            -backend-config=key=dev.terraform.tfstate \
            -backend-config=container_name=tfstate \
            -backend-config=resource_group_name=kja-rg \
            -backend-config=storage_account_name=kjastorage \
            -input=false
      - name: validate
        run: |
          terraform validate
      - name: plan
        run: |
          terraform plan -input=false -out dev.tfplan -var-file env/dev.tfvars
      - name: Capture plan
        id: plan
        run: terraform show -no-color dev.tfplan
      - name: Update PR (plan)
        uses: actions/github-script@0.9.0
        env:
          STDOUT: "```terraform\n${{ steps.plan.outputs.* }}```"
        with:
          script: |
            const output = `<details><summary>tf plan (nonprod):</summary>\n\n${process.env.STDOUT}\n\n</details>`;
            github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })
